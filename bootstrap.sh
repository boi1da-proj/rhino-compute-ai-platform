#!/bin/bash
# HelloEtoGH Bootstrap Script
# One-command setup, build, run, and artifact tracking

echo "🚀 HelloEtoGH Bootstrap - Eto.Forms + Grasshopper Style"
echo "========================================================"

# Check prerequisites
if ! command -v dotnet &> /dev/null; then
    echo "❌ .NET SDK not found. Please install .NET 7.0 or newer."
    exit 1
fi

echo "✅ .NET SDK found: $(dotnet --version)"

# Function to calculate SHA256 checksum
calculate_checksum() {
    local file=$1
    if command -v shasum &> /dev/null; then
        shasum -a 256 "$file" | cut -d' ' -f1
    elif command -v sha256sum &> /dev/null; then
        sha256sum "$file" | cut -d' ' -f1
    else
        echo "sha256-calculator-not-found"
    fi
}

# Function to update artifact_index.json
update_artifact_index() {
    local checksum=$(calculate_checksum "HelloEtoGH.csproj")
    local timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
    
    # Create updated artifact_index.json
    cat > artifact_index.json << EOF
{
  "artifact_index_version": 1,
  "generated_at": "$timestamp",
  "project": "HelloEtoGH",
  "assets": [
    {
      "asset_id": "hello-eto-gh-001",
      "name": "Hello Eto Grasshopper-Style UI",
      "type": "ui-app",
      "path": "HelloEtoGH.csproj",
      "version": "0.1.0",
      "checksum": "sha256-$checksum",
      "dependencies": ["Eto.Forms", "Eto.Platform"],
      "shadow_deployment": {
        "runtime_type": "container",
        "sandbox_policy": "isolated",
        "os": ["windows", "macos", "linux"]
      },
      "environment": "dev",
      "timestamp": "$timestamp",
      "notes": "Bootstrap-generated Eto Hello World with Grasshopper-style host stub."
    }
  ],
  "generator": "bootstrap-script",
  "notes": "Auto-generated by bootstrap script with calculated checksums."
}
EOF

    echo "📝 Updated artifact_index.json with checksum: sha256-$checksum"
}

# Main bootstrap process
echo ""
echo "🔨 Building HelloEtoGH..."
echo "=========================="

# Restore packages
echo "📦 Restoring packages..."
dotnet restore

if [ $? -ne 0 ]; then
    echo "❌ Package restore failed!"
    exit 1
fi

# Build project
echo "🔨 Building project..."
dotnet build --configuration Release

if [ $? -ne 0 ]; then
    echo "❌ Build failed!"
    exit 1
fi

echo "✅ Build successful!"

# Update artifact index
echo ""
echo "📝 Updating artifact tracking..."
update_artifact_index

# Run the application
echo ""
echo "🎯 Launching HelloEtoGH..."
echo "=========================="
dotnet run --configuration Release

echo ""
echo "✅ Bootstrap complete! HelloEtoGH launched successfully."
echo "📊 Check artifact_index.json for updated tracking information."
